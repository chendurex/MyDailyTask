package com.amq.broker;

/**
 * @author chen
 * @description
 * @pachage com.amq.broker
 * @date 2016/8/25 9:59
 */
public class target {
    /**
     * 1，消息事物：客户端与服务端测试，包括消息写入进去是否发送到broker，消息消费成功，是否回复给broker
     *
     * 2，每个客户端的连接池数，产生的线程数量，每个session的生命周期控制
     *
     * 3，消息推送模式：消息消费时，如果阻塞超时，或者抛出异常，后续的操作
     *
     * 4，客户端消息确实机制，是同步确认还是异步确认，同步确认有消息阻塞导致消费能力下降，直接影响broker，异步消费不稳定，而且如果客户端
     * 消费能力不够，直接会把客户端拖垮
     *
     * 5，消息发送模式：同步或者异步，同步保证消息的安全性，但是失去性能，异步相反
     *
     * 6，众多的subscribe中，如果其中一个消费失败了，是怎么后续处理消费的，是重新发送到broker还是发送到失败的broker，由原来的连接再次消费吗
     * 是否有实现如果消费失败，则放入到失败的topic，然后每个subscribe默认也订阅了当前topic的失败topic，然后可以再次消费，或者交给集群中的其它消费者消费
     *
     * 7，amq提供了advisor topic可以订阅，用于监控amq的运行状态，实现预警功能
     */
}
